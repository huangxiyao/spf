<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.hp.it.spf.portlet</groupId>
        <artifactId>portlet</artifactId>
        <version>2.2.0</version>
    </parent>

    <groupId>com.hp.it.spf</groupId>
    <artifactId>spf-openportalclasspath</artifactId>
    <version>2.2.0-SNAPSHOT</version>
    <name>OpenPortal servlet container classpath</name>
    <description>
        The classpath JAR for OpenPortal.
        This module is used only to provide classpath which needs to be setup as part of WebLogic
        Server configuration. This jar, through its MANIFEST.MF's Class-Path entry references
        any other JAR files which need to be part of the classpath.
    </description>

    <!--
    Dependencies scope is set explicitly to "compile" to ensure all of them are included
    in the JAR classpath regardless of the scope defined in the parent pom.
    In addition. the maven-dependency-plugin is also configured to copy dependencies
    with "compile" scope - see below.
    -->
    <dependencies>
        <dependency>
            <groupId>com.sun.portal.portletcontainer</groupId>
            <artifactId>spf-pc-database-persistence</artifactId>
            <version>${parent.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.hp.it.spf.openportal</groupId>
            <artifactId>spf-portlet-container</artifactId>
            <version>${parent.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.ccpp</groupId>
            <artifactId>ccpp</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.portal.portletcontainer</groupId>
            <artifactId>container</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.portal.portletcontainer</groupId>
            <artifactId>portletcontainercontext</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.portal.portletcontainer</groupId>
            <artifactId>portletadmin</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.portal.portletcontainer</groupId>
            <artifactId>portlet-container</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.xml</groupId>
            <artifactId>webservices-api</artifactId>
            <version>1.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.portlet</groupId>
            <artifactId>portlet-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>openportalclasspath</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <includeScope>compile</includeScope>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!--
                    Since final name is redefined above to be backward compatible and also
                    to strip off any version number, we still want the overall package to have
                    the version number so we re-define the finalName below. This way
                    the JAR file will be named openportalclasspath.jar but the bundle containing
                    it along with its dependencies will be called spf-openportalclasspath-x.x.x-bin.zip
                    -->
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <descriptors>
                        <descriptor>src/main/assembly/bin.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>package-archive-with-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>